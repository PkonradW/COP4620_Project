// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class LittleLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		KEYWORDS=1, OP=2, WS=3, IDENTIFIER=4, INTLITERAL=5, FLOATLITERAL=6, STRINGLITERAL=7, 
		COMMENT=8;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"KEYWORDS", "OP", "WS", "IDENTIFIER", "INTLITERAL", "FLOATLITERAL", "STRINGLITERAL", 
			"COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "KEYWORDS", "OP", "WS", "IDENTIFIER", "INTLITERAL", "FLOATLITERAL", 
			"STRINGLITERAL", "COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LittleLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Little.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\b\u00ad\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u0000o\b\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0003\u0001{\b\u0001"+
		"\u0001\u0002\u0004\u0002~\b\u0002\u000b\u0002\f\u0002\u007f\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0005\u0003\u0086\b\u0003\n\u0003"+
		"\f\u0003\u0089\t\u0003\u0001\u0004\u0004\u0004\u008c\b\u0004\u000b\u0004"+
		"\f\u0004\u008d\u0001\u0005\u0005\u0005\u0091\b\u0005\n\u0005\f\u0005\u0094"+
		"\t\u0005\u0001\u0005\u0001\u0005\u0004\u0005\u0098\b\u0005\u000b\u0005"+
		"\f\u0005\u0099\u0001\u0006\u0001\u0006\u0005\u0006\u009e\b\u0006\n\u0006"+
		"\f\u0006\u00a1\t\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0005\u0007\u00a9\b\u0007\n\u0007\f\u0007\u00ac"+
		"\t\u0007\u0000\u0000\b\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004"+
		"\t\u0005\u000b\u0006\r\u0007\u000f\b\u0001\u0000\b\u0004\u0000*+--//="+
		"=\u0004\u0000(),,;<>>\u0003\u0000\t\n\r\r  \u0002\u0000AZaz\u0003\u0000"+
		"09AZaz\u0001\u000009\u0001\u0000\"\"\u0002\u0000\n\n\r\r\u00c9\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0001n\u0001\u0000\u0000"+
		"\u0000\u0003z\u0001\u0000\u0000\u0000\u0005}\u0001\u0000\u0000\u0000\u0007"+
		"\u0083\u0001\u0000\u0000\u0000\t\u008b\u0001\u0000\u0000\u0000\u000b\u0092"+
		"\u0001\u0000\u0000\u0000\r\u009b\u0001\u0000\u0000\u0000\u000f\u00a4\u0001"+
		"\u0000\u0000\u0000\u0011\u0012\u0005P\u0000\u0000\u0012\u0013\u0005R\u0000"+
		"\u0000\u0013\u0014\u0005O\u0000\u0000\u0014\u0015\u0005G\u0000\u0000\u0015"+
		"\u0016\u0005R\u0000\u0000\u0016\u0017\u0005A\u0000\u0000\u0017o\u0005"+
		"M\u0000\u0000\u0018\u0019\u0005B\u0000\u0000\u0019\u001a\u0005E\u0000"+
		"\u0000\u001a\u001b\u0005G\u0000\u0000\u001b\u001c\u0005I\u0000\u0000\u001c"+
		"o\u0005N\u0000\u0000\u001d\u001e\u0005E\u0000\u0000\u001e\u001f\u0005"+
		"N\u0000\u0000\u001fo\u0005D\u0000\u0000 !\u0005F\u0000\u0000!\"\u0005"+
		"U\u0000\u0000\"#\u0005N\u0000\u0000#$\u0005C\u0000\u0000$%\u0005T\u0000"+
		"\u0000%&\u0005I\u0000\u0000&\'\u0005O\u0000\u0000\'o\u0005N\u0000\u0000"+
		"()\u0005R\u0000\u0000)*\u0005E\u0000\u0000*+\u0005A\u0000\u0000+o\u0005"+
		"D\u0000\u0000,-\u0005W\u0000\u0000-.\u0005R\u0000\u0000./\u0005I\u0000"+
		"\u0000/0\u0005T\u0000\u00000o\u0005E\u0000\u000012\u0005I\u0000\u0000"+
		"2o\u0005F\u0000\u000034\u0005E\u0000\u000045\u0005L\u0000\u000056\u0005"+
		"S\u0000\u00006o\u0005E\u0000\u000078\u0005E\u0000\u000089\u0005N\u0000"+
		"\u00009:\u0005D\u0000\u0000:;\u0005I\u0000\u0000;o\u0005F\u0000\u0000"+
		"<=\u0005W\u0000\u0000=>\u0005H\u0000\u0000>?\u0005I\u0000\u0000?@\u0005"+
		"L\u0000\u0000@o\u0005E\u0000\u0000AB\u0005E\u0000\u0000BC\u0005N\u0000"+
		"\u0000CD\u0005D\u0000\u0000DE\u0005W\u0000\u0000EF\u0005H\u0000\u0000"+
		"FG\u0005I\u0000\u0000GH\u0005L\u0000\u0000Ho\u0005E\u0000\u0000IJ\u0005"+
		"C\u0000\u0000JK\u0005O\u0000\u0000KL\u0005N\u0000\u0000LM\u0005T\u0000"+
		"\u0000MN\u0005I\u0000\u0000NO\u0005N\u0000\u0000OP\u0005U\u0000\u0000"+
		"Po\u0005E\u0000\u0000QR\u0005B\u0000\u0000RS\u0005R\u0000\u0000ST\u0005"+
		"E\u0000\u0000TU\u0005A\u0000\u0000Uo\u0005K\u0000\u0000VW\u0005R\u0000"+
		"\u0000WX\u0005E\u0000\u0000XY\u0005T\u0000\u0000YZ\u0005U\u0000\u0000"+
		"Z[\u0005R\u0000\u0000[o\u0005N\u0000\u0000\\]\u0005I\u0000\u0000]^\u0005"+
		"N\u0000\u0000^o\u0005T\u0000\u0000_`\u0005V\u0000\u0000`a\u0005O\u0000"+
		"\u0000ab\u0005I\u0000\u0000bo\u0005D\u0000\u0000cd\u0005S\u0000\u0000"+
		"de\u0005T\u0000\u0000ef\u0005R\u0000\u0000fg\u0005I\u0000\u0000gh\u0005"+
		"N\u0000\u0000ho\u0005G\u0000\u0000ij\u0005F\u0000\u0000jk\u0005L\u0000"+
		"\u0000kl\u0005O\u0000\u0000lm\u0005A\u0000\u0000mo\u0005T\u0000\u0000"+
		"n\u0011\u0001\u0000\u0000\u0000n\u0018\u0001\u0000\u0000\u0000n\u001d"+
		"\u0001\u0000\u0000\u0000n \u0001\u0000\u0000\u0000n(\u0001\u0000\u0000"+
		"\u0000n,\u0001\u0000\u0000\u0000n1\u0001\u0000\u0000\u0000n3\u0001\u0000"+
		"\u0000\u0000n7\u0001\u0000\u0000\u0000n<\u0001\u0000\u0000\u0000nA\u0001"+
		"\u0000\u0000\u0000nI\u0001\u0000\u0000\u0000nQ\u0001\u0000\u0000\u0000"+
		"nV\u0001\u0000\u0000\u0000n\\\u0001\u0000\u0000\u0000n_\u0001\u0000\u0000"+
		"\u0000nc\u0001\u0000\u0000\u0000ni\u0001\u0000\u0000\u0000o\u0002\u0001"+
		"\u0000\u0000\u0000pq\u0005:\u0000\u0000q{\u0005=\u0000\u0000r{\u0007\u0000"+
		"\u0000\u0000st\u0005!\u0000\u0000t{\u0005=\u0000\u0000u{\u0007\u0001\u0000"+
		"\u0000vw\u0005<\u0000\u0000w{\u0005=\u0000\u0000xy\u0005>\u0000\u0000"+
		"y{\u0005=\u0000\u0000zp\u0001\u0000\u0000\u0000zr\u0001\u0000\u0000\u0000"+
		"zs\u0001\u0000\u0000\u0000zu\u0001\u0000\u0000\u0000zv\u0001\u0000\u0000"+
		"\u0000zx\u0001\u0000\u0000\u0000{\u0004\u0001\u0000\u0000\u0000|~\u0007"+
		"\u0002\u0000\u0000}|\u0001\u0000\u0000\u0000~\u007f\u0001\u0000\u0000"+
		"\u0000\u007f}\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000\u0000"+
		"\u0080\u0081\u0001\u0000\u0000\u0000\u0081\u0082\u0006\u0002\u0000\u0000"+
		"\u0082\u0006\u0001\u0000\u0000\u0000\u0083\u0087\u0007\u0003\u0000\u0000"+
		"\u0084\u0086\u0007\u0004\u0000\u0000\u0085\u0084\u0001\u0000\u0000\u0000"+
		"\u0086\u0089\u0001\u0000\u0000\u0000\u0087\u0085\u0001\u0000\u0000\u0000"+
		"\u0087\u0088\u0001\u0000\u0000\u0000\u0088\b\u0001\u0000\u0000\u0000\u0089"+
		"\u0087\u0001\u0000\u0000\u0000\u008a\u008c\u0007\u0005\u0000\u0000\u008b"+
		"\u008a\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000\u0000\u0000\u008d"+
		"\u008b\u0001\u0000\u0000\u0000\u008d\u008e\u0001\u0000\u0000\u0000\u008e"+
		"\n\u0001\u0000\u0000\u0000\u008f\u0091\u0007\u0005\u0000\u0000\u0090\u008f"+
		"\u0001\u0000\u0000\u0000\u0091\u0094\u0001\u0000\u0000\u0000\u0092\u0090"+
		"\u0001\u0000\u0000\u0000\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0095"+
		"\u0001\u0000\u0000\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0095\u0097"+
		"\u0005.\u0000\u0000\u0096\u0098\u0007\u0005\u0000\u0000\u0097\u0096\u0001"+
		"\u0000\u0000\u0000\u0098\u0099\u0001\u0000\u0000\u0000\u0099\u0097\u0001"+
		"\u0000\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\f\u0001\u0000"+
		"\u0000\u0000\u009b\u009f\u0005\"\u0000\u0000\u009c\u009e\b\u0006\u0000"+
		"\u0000\u009d\u009c\u0001\u0000\u0000\u0000\u009e\u00a1\u0001\u0000\u0000"+
		"\u0000\u009f\u009d\u0001\u0000\u0000\u0000\u009f\u00a0\u0001\u0000\u0000"+
		"\u0000\u00a0\u00a2\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a3\u0005\"\u0000\u0000\u00a3\u000e\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a5\u0005-\u0000\u0000\u00a5\u00a6\u0005-\u0000\u0000\u00a6\u00aa"+
		"\u0001\u0000\u0000\u0000\u00a7\u00a9\b\u0007\u0000\u0000\u00a8\u00a7\u0001"+
		"\u0000\u0000\u0000\u00a9\u00ac\u0001\u0000\u0000\u0000\u00aa\u00a8\u0001"+
		"\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000\u0000\u00ab\u0010\u0001"+
		"\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\n\u0000nz\u007f"+
		"\u0087\u008d\u0092\u0099\u009f\u00aa\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}